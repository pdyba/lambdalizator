name: Check pull request

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  code_quality:
    name: Check code quality

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install make
        run: |
          apt-get update
          apt-get --yes install make git

      - name: Install dependencies
        run: make install-dev

      - name: Run black
        run: make black-check

      - name: Run isort
        run: make isort-check

      - name: Run flake8
        run: make flake8

      - name: Run mypy
        run: make mypy

      - name: Run pylint
        run: make pylint

  unit_tests:
    name: Run unit tests

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install make
        run: |
          apt-get update
          apt-get --yes install make

      - name: Install dependencies
        run: make install-dev

      - name: Run unit tests
        run: make test

  version_check:
    name: Check version

    runs-on: ubuntu-latest
    if: ${{ github.base_ref == 'refs/heads/master' }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Check whether the version was updated
        run: |
          PUBLISHED_VERSION=$(curl https://pypi.org/pypi/lbz/json | jq -r '.info.version')
          REPO_VERSION=$(cat version)
          if [ "$PUBLISHED_VERSION" == "$REPO_VERSION" ]; then
            echo "Package version was not updated in the 'version' file"
            exit 1
          fi
